# Xamarin.Android
# Build a Xamarin.Android project.
# Add steps that test, sign, and distribute an app, save build artifacts, and more:
# https://docs.microsoft.com/azure/devops/pipelines/languages/xamarin

trigger:
- main

pool:
  vmImage: 'windows-latest'

variables:
  configuration: 'Release'

steps:
- task: NuGetToolInstaller@1

- task: NuGetCommand@2
  displayName: 'Restore packages'
  inputs:
    restoreSolution: '**/*.sln'

- task: XamarinAndroid@1
  displayName: 'Build Android'
  inputs:
    projectFile: 'AuthenticatorPro.Droid/AuthenticatorPro.Droid.csproj'
    outputDirectory: '$(Build.BinariesDirectory)/android'
    configuration: '$(configuration)'

- task: XamarinAndroid@1
  displayName: 'Build Wear OS'
  inputs:
    projectFile: 'AuthenticatorPro.WearOS/AuthenticatorPro.WearOS.csproj'
    outputDirectory: '$(Build.BinariesDirectory)/wearos'
    configuration: '$(configuration)'

- task: AndroidSigning@3
  displayName: 'Sign APKs'
  inputs:
    apkFiles: '$(outputDirectory)/*/*.apk'
    apksign: true
    zipalign: true
    apksignerKeystoreFile: 'jmh.keystore'
    apksignerKeystorePassword: $(keystore.password)
    apksignerKeystoreAlias: $(keystore.alias)
    apksignerKeyPassword: $(key.password)
    
- task: DotNetCoreCLI@2
  displayName: 'Run tests'
  inputs:
    command: 'test'
    arguments: '--configuration $(configuration)'
    publishTestResults: true
    projects: 'AuthenticatorPro.Test/AuthenticatorPro.Test.csproj'
    
- task: CopyFiles@2
  condition: succeeded()
  inputs:
    contents: '$(Build.BinariesDirectory)/*/*.apk'
    targetFolder: $(Build.ArtifactStagingDirectory)

- task: PublishBuildArtifacts@1
  displayName: 'Publish artifacts'
  condition: succeeded()
  inputs:
    pathtoPublish: '$(Build.ArtifactStagingDirectory)'